(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=function(){function n(e){var r=this,o=e.url,i=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"addCard",(function(e){var t=e.name,n=e.link;return fetch("".concat(r._url,"cards"),{method:"POST",headers:r._headers,body:JSON.stringify({name:t,link:n})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status," ").concat(e.statusText))}))})),t(this,"deleteCard",(function(e){return fetch("".concat(r._url,"cards/").concat(e),{method:"DELETE",headers:r._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status," ").concat(e.statusText))}))})),t(this,"likeCard",(function(e){return fetch("".concat(r._url,"cards/").concat(e,"/likes"),{method:"PUT",headers:r._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status," ").concat(e.statusText))}))})),t(this,"inLikeCard",(function(e){return fetch("".concat(r._url,"cards/").concat(e,"/likes"),{method:"DELETE",headers:r._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status," ").concat(e.statusText))}))})),this._url=o,this._headers=i}var r,o;return r=n,o=[{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(e){if(e.ok)return e.json();Promise.reject("Ошибка ".concat(e.status))}))}},{key:"updateProfileInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"updateProfileAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"cards"),{headers:this._headers}).then((function(e){if(e.ok)return e.json();Promise.reject("Ошибка ".concat(e.status))}))}}],o&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r){var o,i,a=this,u=r.handleCardClick,c=r.handleDelClick,s=r.handleIsOwner,l=r.handleLikesCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=function(){a._element.remove()},(o="handleDeleteCard")in this?Object.defineProperty(this,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[o]=i,this._link=t.link,this._name=t.name,this._data=t,this._likes=t.likes,this._id=t._id,this._owner=t.owner._id,this._isOwner=s(this._owner),this._templateSelector=n,this._handleCardClick=u,this._handleDelClick=c.bind(this),this._handleLikesCard=l}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage=this._element.querySelector(".element__mask-group"),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._link,e._name)})),this._cardTrash=this._element.querySelector(".element__trash"),this._isOwner&&this._cardTrash.addEventListener("click",(function(){e._handleDelClick(e._data)})),this._likeButton=this._element.querySelector(".element__like"),this._likeButton.addEventListener("click",(function(){e._handleLikesCard(e._data)}))}},{key:"_handlelikeCheck",value:function(){this.isLiked()?this.addLike():this.deleteLike()}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return e._data.currentUser._id===t._id}))}},{key:"addLike",value:function(){this._likeButton.classList.add("element__like_active")}},{key:"deleteLike",value:function(){this._likeButton.classList.remove("element__like_active")}},{key:"setLike",value:function(e){this._likes=e,this._cardLikeCount.textContent=this._likes.length}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle=this._element.querySelector(".element__title"),this._cardTitle.textContent=this._name,this._cardLikeCount=this._element.querySelector(".element__like-count"),this.setLike(this._likes),this._handlelikeCheck(),this.handleDeleteCard(),this._isOwner||this._cardTrash.remove(),this._element}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(document.querySelector(".popup_opened"))}},{key:"setEventListeners",value:function(){var e=this;this._closeIcon=this._popupSelector.querySelector(".popup__close-icon"),this._closeIcon.addEventListener("click",(function(){e.close()})),this._popupSelector.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close(t.target)}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImg=t._popupSelector.querySelector(".popup__el-img"),t._popupCaption=t._popupSelector.querySelector(".popup__el-caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.data;f(_(a.prototype),"open",this).call(this),this._popupImg.src=t.link,this._popupImg.alt=t.name,this._popupCaption.textContent=t.name}},{key:"setEventListeners",value:function(){f(_(a.prototype),"setEventListeners",this).call(this)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmit,o=e.handleFormPreFill;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmit=r,t._inputList=t._popupSelector.querySelectorAll(".form__input"),Array.from(t._inputList),t._handleFormPreFill=o,t._buttonSubmit=t._popupSelector.querySelector(".form__submit-button"),t}return t=a,(n=[{key:"setLoading",value:function(e){e&&(this._buttonSubmit.textContent="Сохранение...")}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;b(w(a.prototype),"setEventListeners",this).call(this),this._form=this._popupSelector.querySelector(".form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.setLoading(!0),e._handleSubmit(e._getInputValues()),e.close()}))}},{key:"open",value:function(){this._handleFormPreFill&&this._handleFormPreFill(this._inputList),b(w(a.prototype),"open",this).call(this)}},{key:"close",value:function(){b(w(a.prototype),"close",this).call(this),this._form.reset()}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function P(e,t){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},P(e,t)}function I(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmit=r,t._inputList=t._popupSelector.querySelectorAll(".form__input"),Array.from(t._inputList),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value,console.log(e)})),e}},{key:"setLoading",value:function(e){e&&(this._buttonSubmit.textContent="Сохранение...")}},{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._form=this._popupSelector.querySelector(".form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.setLoading(!0),e._handleSubmit(e._getInputValues()),e.close()}))}},{key:"open",value:function(){j(q(a.prototype),"open",this).call(this)}},{key:"close",value:function(){j(q(a.prototype),"close",this).call(this),this._form.reset()}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userJob=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return this.userData={nameInput:this._userName.textContent,jobInput:this._userJob.textContent,_id:this._id},this.userData}},{key:"setUserInfo",value:function(e){var t=e.nameInput,n=e.jobInput,r=e._id;this._userName.textContent=t,this._userJob.textContent=n,this._id=r}},{key:"setUserInfoAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}}],n&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._settings=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_showInputError",value:function(e,t){this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._settings.inputErrorClass),this._errorElement.textContent=t,this._errorElement.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass),this._errorElement.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),B={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"};function U(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var V=document.querySelector(".popup_for_edit").querySelector(".form_for_edit"),F=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__add-button"),J=document.querySelector(".popup_for_card").querySelector(".form_for_card"),H=document.querySelector(".profile__hover-avatar"),M=document.querySelector(".popup_for_avatar").querySelector(".form_for_avatar"),z=document.querySelector(".form__submit-button_for_delete"),$=new D(V,B);$.enableValidation();var G=new D(J,B);G.enableValidation();var K=new D(M,B);K.enableValidation();var Q=new n({url:"https://mesto.nomoreparties.co/v1/cohort-46/",headers:{authorization:"30876ae6-9c71-4f9d-a726-3e14bc235ea6","Content-Type":"application/json"}});Promise.all([Q.getUserInfo(),Q.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return U(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=o.name,u=o.about,c=o._id;Y.setUserInfo({nameInput:a,jobInput:u,_id:c}),Y.setUserInfoAvatar(o),oe.renderItems(i)})).catch((function(e){return console.log(e)}));var W=new c(".popup_for_delete");H.addEventListener("click",(function(){X.open(),K.resetValidation()}));var X=new T({popupSelector:".popup_for_avatar",handleSubmit:function(e){var t=e.avatar;Q.updateProfileAvatar({avatar:t}).then((function(e){Y.setUserInfoAvatar({avatar:e.avatar})})).catch((function(e){console.log(e)})).finally((function(){X.setLoading(!1)}))}});X.setEventListeners(),N.addEventListener("click",(function(){ie.open(),J.reset(),G.resetValidation()}));var Y=new x({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),Z=new E({popupSelector:".popup_for_edit",handleSubmit:function(e){var t=e.nameInput,n=e.jobInput;Q.updateProfileInfo({name:t,about:n}).then((function(e){Y.setUserInfo({nameInput:e.name,jobInput:e.about})})).catch((function(e){return console.log(e)})),Z.setLoading(!1)},handleFormPreFill:function(e){var t=Y.getUserInfo();e.forEach((function(e){return e.value=t[e.name]}))}});Z.setEventListeners(),F.addEventListener("click",(function(){Z.open(),$.resetValidation()}));var ee=new y(".popup_for_img");function te(e,t){ee.open({data:{link:e,name:t}}),ee.setEventListeners()}var ne=function(e){return Y._id===e};function re(e){e.currentUser=Y;var t=new o(e,".element-template",{handleCardClick:te,handleDelClick:function(e){W.open(),W.setEventListeners(),z.addEventListener("click",(function(){Q.deleteCard(e._id).then((function(){t.handleDeleteCard(),W.close()})).catch((function(e){return console.log(e)}))}))},handleIsOwner:ne,handleLikesCard:function(e){t.isLiked()?Q.inLikeCard(e._id).then((function(e){t.deleteLike(),t.setLike(e.likes)})).catch((function(e){return console.log(e)})):Q.likeCard(e._id).then((function(e){t.addLike(),t.setLike(e.likes)})).catch((function(e){return console.log(e)}))}});return t.generateCard()}var oe=new a({renderer:function(e){oe.addItem(re(e))}},".groups__elements"),ie=new E({popupSelector:".popup_for_card",handleSubmit:function(e){var t=e.linkCard,n=e.nameCard;Q.addCard({link:t,name:n}).then((function(e){oe.addItem(re(e))})).catch((function(e){console.log(e)})).finally((function(){ie.setLoading(!1)})),ie.close()}});ie.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5iNzMzYjdmY2IzODYwYjQzOWI4MS5qcyIsIm1hcHBpbmdzIjoiaVRBQU8sSUFBTUEsRUFBYixXQUNJLGNBQTZCLFdBQWZDLEVBQWUsRUFBZkEsSUFBS0MsRUFBVSxFQUFWQSxTLDRGQUFVLDJCQTRDbkIsWUFBb0IsSUFBakJDLEVBQWlCLEVBQWpCQSxLQUFNQyxFQUFXLEVBQVhBLEtBQ2pCLE9BQU9DLE1BQU0sR0FBRCxPQUFJLEVBQUtDLEtBQVQsU0FBc0IsQ0FDaENDLE9BQVEsT0FDUkwsUUFBUyxFQUFLTSxTQUNkQyxLQUFNQyxLQUFLQyxVQUFVLENBQUVSLEtBQUFBLEVBQU1DLEtBQUFBLE1BQzVCUSxNQUFLLFNBQUFDLEdBQUcsT0FBSUEsRUFBSUMsR0FBS0QsRUFBSUUsT0FBU0MsUUFBUUMsT0FBUixpQkFBeUJKLEVBQUlLLE9BQTdCLFlBQXVDTCxFQUFJTSxZQUFyRSxHQUNaLElBbEQ0QixxQkFvRGhCLFNBQUNDLEdBQ1osT0FBT2YsTUFBTSxHQUFELE9BQUksRUFBS0MsS0FBVCxpQkFBc0JjLEdBQU0sQ0FDdENiLE9BQVEsU0FDUkwsUUFBUyxFQUFLTSxXQUNiSSxNQUFLLFNBQUFDLEdBQUcsT0FBSUEsRUFBSUMsR0FBS0QsRUFBSUUsT0FBU0MsUUFBUUMsT0FBUixpQkFBeUJKLEVBQUlLLE9BQTdCLFlBQXVDTCxFQUFJTSxZQUFyRSxHQUNaLElBekQ0QixtQkE0RGxCLFNBQUNDLEdBQ1YsT0FBT2YsTUFBTSxHQUFELE9BQUksRUFBS0MsS0FBVCxpQkFBc0JjLEVBQXRCLFVBQWtDLENBQzVDYixPQUFRLE1BQ1JMLFFBQVMsRUFBS00sV0FDYkksTUFBSyxTQUFBQyxHQUFHLE9BQUlBLEVBQUlDLEdBQUtELEVBQUlFLE9BQVNDLFFBQVFDLE9BQVIsaUJBQXlCSixFQUFJSyxPQUE3QixZQUF1Q0wsRUFBSU0sWUFBckUsR0FDWixJQWpFNEIscUJBbUVoQixTQUFDQyxHQUNaLE9BQU9mLE1BQU0sR0FBRCxPQUFJLEVBQUtDLEtBQVQsaUJBQXNCYyxFQUF0QixVQUFrQyxDQUM1Q2IsT0FBUSxTQUNSTCxRQUFTLEVBQUtNLFdBQ2JJLE1BQUssU0FBQUMsR0FBRyxPQUFJQSxFQUFJQyxHQUFLRCxFQUFJRSxPQUFTQyxRQUFRQyxPQUFSLGlCQUF5QkosRUFBSUssT0FBN0IsWUFBdUNMLEVBQUlNLFlBQXJFLEdBQ1osSUF2RUNFLEtBQUtmLEtBQU9MLEVBQ1pvQixLQUFLYixTQUFXTixDQUNqQixDLFFBSkwsTyxFQUFBLEUsRUFBQSwwQkFPSSxXQUNFLE9BQU9HLE1BQU0sR0FBRCxPQUFJZ0IsS0FBS2YsS0FBVCxZQUF5QixDQUFFSixRQUFTbUIsS0FBS2IsV0FBV0ksTUFBSyxTQUFDQyxHQUNwRSxHQUFHQSxFQUFJQyxHQUNMLE9BQU9ELEVBQUlFLE9BRVhDLFFBQVFDLE9BQVIsaUJBQXlCSixFQUFJSyxRQUVoQyxHQUNGLEdBZkwsK0JBaUJJLFlBQW1DLElBQWZmLEVBQWUsRUFBZkEsS0FBTW1CLEVBQVMsRUFBVEEsTUFDeEIsT0FBT2pCLE1BQU0sR0FBRCxPQUFJZ0IsS0FBS2YsS0FBVCxZQUF5QixDQUNuQ0MsT0FBUSxRQUNSTCxRQUFTbUIsS0FBS2IsU0FDZEMsS0FBTUMsS0FBS0MsVUFBVSxDQUFFUixLQUFBQSxFQUFNbUIsTUFBQUEsTUFDNUJWLE1BQUssU0FBQUMsR0FBRyxPQUFJQSxFQUFJQyxHQUFLRCxFQUFJRSxPQUFTQyxRQUFRQyxPQUFSLGlCQUF5QkosRUFBSUssUUFBdkQsR0FDWixHQXZCTCxpQ0F5QkksWUFBZ0MsSUFBVkssRUFBVSxFQUFWQSxPQUNwQixPQUFPbEIsTUFBTSxHQUFELE9BQUlnQixLQUFLZixLQUFULG1CQUFnQyxDQUMxQ0MsT0FBUSxRQUNSTCxRQUFTbUIsS0FBS2IsU0FDZEMsS0FBTUMsS0FBS0MsVUFBVSxDQUFFWSxPQUFBQSxNQUN0QlgsTUFBSyxTQUFBQyxHQUFHLE9BQUlBLEVBQUlDLEdBQUtELEVBQUlFLE9BQVNDLFFBQVFDLE9BQVIsaUJBQXlCSixFQUFJSyxRQUF2RCxHQUNaLEdBL0JMLDZCQWtDSSxXQUNFLE9BQU9iLE1BQU0sR0FBRCxPQUFJZ0IsS0FBS2YsS0FBVCxTQUFzQixDQUFFSixRQUFTbUIsS0FBS2IsV0FBV0ksTUFBSyxTQUFDQyxHQUNqRSxHQUFHQSxFQUFJQyxHQUNMLE9BQU9ELEVBQUlFLE9BRVhDLFFBQVFDLE9BQVIsaUJBQXlCSixFQUFJSyxRQUVoQyxHQUNGLEksdUVBMUNMLEssc0tDQ08sSUFBTU0sRUFBYixXQUVJLFdBQVlDLEVBQU1DLEVBQWxCLEdBQXlHLEksSUFBQSxPQUFuRUMsRUFBbUUsRUFBbkVBLGdCQUFpQkMsRUFBa0QsRUFBbERBLGVBQWdCQyxFQUFrQyxFQUFsQ0EsY0FBZUMsRUFBbUIsRUFBbkJBLGlCLDRGQUFtQixTLEVBb0V0RixXQUNmLEVBQUtDLFNBQVNDLFFBQ2pCLEcsRUF0RXdHLDJCLHNCQUFBLEssdURBQUEsSyxLQUNyR1gsS0FBS1ksTUFBUVIsRUFBS3JCLEtBQ2xCaUIsS0FBS2EsTUFBUVQsRUFBS3RCLEtBQ2xCa0IsS0FBS2MsTUFBUVYsRUFDYkosS0FBS2UsT0FBU1gsRUFBS1ksTUFDbkJoQixLQUFLaUIsSUFBTWIsRUFBS2EsSUFDaEJqQixLQUFLa0IsT0FBU2QsRUFBS2UsTUFBTUYsSUFDekJqQixLQUFLb0IsU0FBV1osRUFBY1IsS0FBS2tCLFFBQ25DbEIsS0FBS3FCLGtCQUFvQmhCLEVBQ3pCTCxLQUFLc0IsaUJBQW1CaEIsRUFDeEJOLEtBQUt1QixnQkFBa0JoQixFQUFlaUIsS0FBS3hCLE1BQzNDQSxLQUFLeUIsaUJBQW1CaEIsQ0FDM0IsQyxRQWRMLE8sRUFBQSxHLEVBQUEsMkJBa0JJLFdBTUksT0FMb0JpQixTQUFTQyxjQUFjM0IsS0FBS3FCLG1CQUMvQ08sUUFDQUQsY0FBYyxZQUNkRSxXQUFVLEVBR2QsR0F6QkwsZ0NBMkJJLFdBQXFCLFdBQ2pCN0IsS0FBSzhCLFdBQWE5QixLQUFLVSxTQUFTaUIsY0FBYyx3QkFDOUMzQixLQUFLOEIsV0FBV0MsaUJBQWlCLFNBQVMsV0FDdEMsRUFBS1QsaUJBQWlCLEVBQUtWLE1BQU8sRUFBS0MsTUFDMUMsSUFDRGIsS0FBS2dDLFdBQWFoQyxLQUFLVSxTQUFTaUIsY0FBYyxtQkFDM0MzQixLQUFLb0IsVUFDSnBCLEtBQUtnQyxXQUFXRCxpQkFBaUIsU0FBUyxXQUN0QyxFQUFLUixnQkFBZ0IsRUFBS1QsTUFDN0IsSUFHTGQsS0FBS2lDLFlBQWNqQyxLQUFLVSxTQUFTaUIsY0FBYyxrQkFDL0MzQixLQUFLaUMsWUFBWUYsaUJBQWlCLFNBQVMsV0FDdkMsRUFBS04saUJBQWlCLEVBQUtYLE1BQzlCLEdBQ0osR0EzQ0wsOEJBNkNJLFdBQ09kLEtBQUtrQyxVQUNKbEMsS0FBS21DLFVBRUxuQyxLQUFLb0MsWUFFWixHQW5ETCxxQkFvREksV0FBVSxXQUNOLE9BQU9wQyxLQUFLZSxPQUFPc0IsTUFBSyxTQUFDQyxHQUNyQixPQUFPLEVBQUt4QixNQUFNeUIsWUFBWXRCLE1BQVFxQixFQUFLckIsR0FDOUMsR0FFSixHQXpETCxxQkEwREksV0FDSWpCLEtBQUtpQyxZQUFZTyxVQUFVQyxJQUFJLHVCQUNsQyxHQTVETCx3QkE2REksV0FDSXpDLEtBQUtpQyxZQUFZTyxVQUFVN0IsT0FBTyx1QkFDckMsR0EvREwscUJBaUVJLFNBQVEyQixHQUNKdEMsS0FBS2UsT0FBU3VCLEVBQ2R0QyxLQUFLMEMsZUFBZUMsWUFBYzNDLEtBQUtlLE9BQU82QixNQUNqRCxHQXBFTCwwQkEwRUksV0FpQkksT0FoQkE1QyxLQUFLVSxTQUFXVixLQUFLNkMsZUFDckI3QyxLQUFLOEMscUJBQ0w5QyxLQUFLOEIsV0FBV2lCLElBQU0vQyxLQUFLWSxNQUMzQlosS0FBSzhCLFdBQVdrQixJQUFNaEQsS0FBS2EsTUFDM0JiLEtBQUtpRCxXQUFhakQsS0FBS1UsU0FBU2lCLGNBQWMsbUJBQzlDM0IsS0FBS2lELFdBQVdOLFlBQWMzQyxLQUFLYSxNQUNuQ2IsS0FBSzBDLGVBQWlCMUMsS0FBS1UsU0FBU2lCLGNBQWMsd0JBQ2xEM0IsS0FBS2tELFFBQVFsRCxLQUFLZSxRQUNsQmYsS0FBS21ELG1CQUdMbkQsS0FBS29ELG1CQUNEcEQsS0FBS29CLFVBQ05wQixLQUFLZ0MsV0FBV3JCLFNBR1pYLEtBQUtVLFFBQ2YsTSxvRUE1RkwsSyxzS0NBTyxJQUFNMkMsRUFBYixXQUVJLGFBQTBCQyxHQUFtQixJQUEvQkMsRUFBK0IsRUFBL0JBLFUsNEZBQStCLFNBQ3pDdkQsS0FBS3dELFVBQVlELEVBQ2pCdkQsS0FBS3lELFdBQWEvQixTQUFTQyxjQUFjMkIsRUFDNUMsQyxRQUxMLE8sRUFBQSxHLEVBQUEsMEJBT0ksU0FBWUksR0FBTyxXQUNmQSxFQUFNQyxTQUFRLFNBQUFyQixHQUNWLEVBQUtrQixVQUFVbEIsRUFDbEIsR0FDSixHQVhMLHFCQWFJLFNBQVFzQixHQUNKNUQsS0FBS3lELFdBQVdJLFFBQVFELEVBQzNCLE0sb0VBZkwsSywwS0NBcUJFLEVBQUFBLFdBQ2pCLFdBQVlDLEksNEZBQWUsU0FDdkIvRCxLQUFLZ0UsZUFBaUJ0QyxTQUFTQyxjQUFjb0MsR0FDN0MvRCxLQUFLaUUsZ0JBQWtCakUsS0FBS2lFLGdCQUFnQnpDLEtBQUt4QixLQUNwRCxDLHlDQUNELFdBQ0lBLEtBQUtnRSxlQUFleEIsVUFBVUMsSUFBSSxnQkFDbENmLFNBQVNLLGlCQUFpQixVQUFXL0IsS0FBS2lFLGdCQUM3QyxHLG1CQUNELFdBQ0lqRSxLQUFLZ0UsZUFBZXhCLFVBQVU3QixPQUFPLGdCQUNyQ2UsU0FBU3dDLG9CQUFvQixVQUFXbEUsS0FBS2lFLGdCQUNoRCxHLDZCQUNELFNBQWdCRSxHQUNFLFdBQVhBLEVBQUlDLEtBQ0hwRSxLQUFLcUUsTUFBTTNDLFNBQVNDLGNBQWMsaUJBRXpDLEcsK0JBRUQsV0FBb0IsV0FDaEIzQixLQUFLc0UsV0FBYXRFLEtBQUtnRSxlQUFlckMsY0FBYyxzQkFDcEQzQixLQUFLc0UsV0FBV3ZDLGlCQUFpQixTQUFTLFdBQ3RDLEVBQUtzQyxPQUNSLElBQ0RyRSxLQUFLZ0UsZUFBZWpDLGlCQUFpQixhQUFhLFNBQUNvQyxHQUMzQ0EsRUFBSUksU0FBV0osRUFBSUssZUFDbkIsRUFBS0gsTUFBTUYsRUFBSUksT0FFdEIsR0FFSixNLHNFQTlCZ0JULEcseXdDQ0NBVyxFQUFBQSxTQUFBQSxJLDZyQkFDakIsV0FBWVYsR0FBZSxhLDRGQUFBLFVBQ3ZCLGNBQU1BLElBQ0RXLFVBQVksRUFBS1YsZUFBZXJDLGNBQWMsa0JBQ25ELEVBQUtnRCxjQUFnQixFQUFLWCxlQUFlckMsY0FBYyxzQkFIaEMsQ0FJMUIsQyxpQ0FFRCxZQUFlLElBQVJ2QixFQUFRLEVBQVJBLEtBQ0gseUNBQ0FKLEtBQUswRSxVQUFVM0IsSUFBTTNDLEVBQUtyQixLQUMxQmlCLEtBQUswRSxVQUFVMUIsSUFBTTVDLEVBQUt0QixLQUMxQmtCLEtBQUsyRSxjQUFjaEMsWUFBY3ZDLEVBQUt0QixJQUN6QyxHLCtCQUNELFdBQ0kscURBQ0gsTSxzRUFmZ0IyRixDQUF1QlgsRyx5d0NDRHZCYyxFQUFBQSxTQUFBQSxJLDZyQkFDakIsY0FBZ0UsTUFBbERiLEVBQWtELEVBQWxEQSxjQUFlYyxFQUFtQyxFQUFuQ0EsYUFBY0MsRUFBcUIsRUFBckJBLGtCQUFxQixPLDRGQUFBLFVBQzVELGNBQU1mLElBQ0RnQixjQUFnQkYsRUFDckIsRUFBS0csV0FBYSxFQUFLaEIsZUFBZWlCLGlCQUFpQixnQkFDdkRDLE1BQU1DLEtBQUssRUFBS0gsWUFDaEIsRUFBS0ksbUJBQXFCTixFQUMxQixFQUFLTyxjQUFnQixFQUFLckIsZUFBZXJDLGNBQWMsd0JBTkssQ0FPL0QsQyx1Q0FDRCxTQUFXMkQsR0FDSEEsSUFDQXRGLEtBQUtxRixjQUFjMUMsWUFBYyxnQkFFeEMsRyw2QkFFRCxXQUNJLElBQU00QyxFQUFhLENBQUMsRUFJcEIsT0FIQXZGLEtBQUtnRixXQUFXckIsU0FBUSxTQUFBNkIsR0FDcEJELEVBQVlDLEVBQU0xRyxNQUFTMEcsRUFBTUMsS0FDcEMsSUFDTUYsQ0FDVixHLCtCQUdELFdBQW9CLFdBQ2hCLHNEQUNBdkYsS0FBSzBGLE1BQVExRixLQUFLZ0UsZUFBZXJDLGNBQWMsU0FDL0MzQixLQUFLMEYsTUFBTTNELGlCQUFpQixVQUFVLFNBQUNvQyxHQUNuQ0EsRUFBSXdCLGlCQUNKLEVBQUtDLFlBQVcsR0FDaEIsRUFBS2IsY0FBYyxFQUFLYyxtQkFDeEIsRUFBS3hCLE9BQ1IsR0FDSixHLGtCQUNELFdBQ09yRSxLQUFLb0Ysb0JBQ0xwRixLQUFLb0YsbUJBQW1CcEYsS0FBS2dGLFlBRWhDLHdDQUNILEcsbUJBQ0QsV0FDSSwwQ0FDQWhGLEtBQUswRixNQUFNSSxPQUNkLE0sc0VBM0NnQmxCLENBQXNCZCxHLHl3Q0NBdEJpQyxFQUFBQSxTQUFBQSxJLDZyQkFDakIsY0FBOEMsTUFBaENoQyxFQUFnQyxFQUFoQ0EsY0FBZWMsRUFBaUIsRUFBakJBLGFBQWlCLE8sNEZBQUEsVUFDMUMsY0FBTWQsSUFDRGdCLGNBQWdCRixFQUNyQixFQUFLRyxXQUFhLEVBQUtoQixlQUFlaUIsaUJBQWlCLGdCQUN0REMsTUFBTUMsS0FBSyxFQUFLSCxZQUp5QixDQUs3QyxDLDRDQUVELFdBQ0ksSUFBTU8sRUFBYSxDQUFDLEVBS3BCLE9BSkF2RixLQUFLZ0YsV0FBV3JCLFNBQVEsU0FBQTZCLEdBQ3JCRCxFQUFZQyxFQUFNMUcsTUFBUzBHLEVBQU1DLE1BQ2pDTyxRQUFRQyxJQUFJVixFQUNkLElBQ01BLENBQ1YsRyx3QkFDRCxTQUFXRCxHQUNIQSxJQUNBdEYsS0FBS3FGLGNBQWMxQyxZQUFjLGdCQUV4QyxHLCtCQUdELFdBQW9CLFdBQ2hCLHNEQUNBM0MsS0FBSzBGLE1BQVExRixLQUFLZ0UsZUFBZXJDLGNBQWMsU0FDL0MzQixLQUFLMEYsTUFBTTNELGlCQUFpQixVQUFVLFNBQUNvQyxHQUNuQ0EsRUFBSXdCLGlCQUNKLEVBQUtDLFlBQVcsR0FDaEIsRUFBS2IsY0FBYyxFQUFLYyxtQkFDeEIsRUFBS3hCLE9BQ1IsR0FDSixHLGtCQUNELFdBQ0ksd0NBQ0gsRyxtQkFDRCxXQUNJLDBDQUNBckUsS0FBSzBGLE1BQU1JLE9BQ2QsTSxzRUF2Q2dCQyxDQUE0QmpDLEcsMEtDQTNCb0MsRUFBQUEsV0FDbEIsY0FBMEQsSUFBNUNDLEVBQTRDLEVBQTVDQSxhQUFjQyxFQUE4QixFQUE5QkEsWUFBYUMsRUFBaUIsRUFBakJBLGdCLDRGQUFpQixTQUN0RHJHLEtBQUtzRyxVQUFZNUUsU0FBU0MsY0FBY3dFLEdBQ3hDbkcsS0FBS3VHLFNBQVc3RSxTQUFTQyxjQUFjeUUsR0FDdkNwRyxLQUFLd0csUUFBVTlFLFNBQVNDLGNBQWMwRSxFQUV6QyxDLCtDQUVELFdBTUksT0FMQXJHLEtBQUt5RyxTQUFXLENBQ1pDLFVBQVcxRyxLQUFLc0csVUFBVTNELFlBQzFCZ0UsU0FBVTNHLEtBQUt1RyxTQUFTNUQsWUFDeEIxQixJQUFLakIsS0FBS2lCLEtBRVBqQixLQUFLeUcsUUFDZixHLHlCQUVELFlBQXdDLElBQTNCQyxFQUEyQixFQUEzQkEsVUFBV0MsRUFBZ0IsRUFBaEJBLFNBQVUxRixFQUFNLEVBQU5BLElBQzlCakIsS0FBS3NHLFVBQVUzRCxZQUFjK0QsRUFDN0IxRyxLQUFLdUcsU0FBUzVELFlBQWNnRSxFQUM1QjNHLEtBQUtpQixJQUFNQSxDQUNkLEcsK0JBQ0QsWUFBNkIsSUFBVGYsRUFBUyxFQUFUQSxPQUNoQkYsS0FBS3dHLFFBQVF6RCxJQUFNN0MsQ0FDdEIsSSx5RUF4QmlCZ0csRyxzS0NEZCxJQUFNVSxFQUFiLFdBQ0csV0FBWUMsRUFBYUMsSSw0RkFBVSxTQUMvQjlHLEtBQUsrRyxhQUFlRixFQUNwQjdHLEtBQUtnSCxVQUFZRixFQUNqQjlHLEtBQUtnRixXQUFhRSxNQUFNQyxLQUFLbkYsS0FBSytHLGFBQWE5QixpQkFBaUJqRixLQUFLZ0gsVUFBVUMsZ0JBQy9FakgsS0FBS2tILGVBQWlCbEgsS0FBSytHLGFBQWFwRixjQUFjM0IsS0FBS2dILFVBQVVHLHFCQUN4RSxDLFFBTkosTyxFQUFBLEcsRUFBQSwrQkFTRyxXQUNFLE9BQU9uSCxLQUFLZ0YsV0FBVzNDLE1BQUssU0FBQytFLEdBQzNCLE9BQVFBLEVBQWFDLFNBQVNDLEtBQy9CLEdBQ0YsR0FiSiw2QkFlRyxXQUFrQixXQUNoQnRILEtBQUt1SCxxQkFFTHZILEtBQUtnRixXQUFXckIsU0FBUSxTQUFDeUQsR0FDdkIsRUFBS0ksZ0JBQWdCSixFQUN0QixHQUVGLEdBdEJKLGdDQXdCRyxXQUNPcEgsS0FBS3lILG9CQUNKekgsS0FBS2tILGVBQWUxRSxVQUFVQyxJQUFJekMsS0FBS2dILFVBQVVVLHFCQUNqRDFILEtBQUtrSCxlQUFlUyxhQUFhLFlBQVksS0FFN0MzSCxLQUFLa0gsZUFBZTFFLFVBQVU3QixPQUFPWCxLQUFLZ0gsVUFBVVUscUJBQ3BEMUgsS0FBS2tILGVBQWVVLGdCQUFnQixZQUUzQyxHQWhDSiw2QkFtQ0csU0FBaUJSLEVBQWNTLEdBQzdCN0gsS0FBSzhILGNBQWdCOUgsS0FBSytHLGFBQWFwRixjQUFsQixXQUFvQ3lGLEVBQWFySCxHQUFqRCxXQUNyQnFILEVBQWE1RSxVQUFVQyxJQUFJekMsS0FBS2dILFVBQVVlLGlCQUMxQy9ILEtBQUs4SCxjQUFjbkYsWUFBY2tGLEVBQ2pDN0gsS0FBSzhILGNBQWN0RixVQUFVQyxJQUFJekMsS0FBS2dILFVBQVVnQixXQUNqRCxHQXhDSiw2QkEwQ0csU0FBaUJaLEdBQ2ZwSCxLQUFLOEgsY0FBZ0I5SCxLQUFLK0csYUFBYXBGLGNBQWxCLFdBQW9DeUYsRUFBYXJILEdBQWpELFdBQ3JCcUgsRUFBYTVFLFVBQVU3QixPQUFPWCxLQUFLZ0gsVUFBVWUsaUJBQzdDL0gsS0FBSzhILGNBQWN0RixVQUFVN0IsT0FBT1gsS0FBS2dILFVBQVVnQixZQUNuRGhJLEtBQUs4SCxjQUFjbkYsWUFBYyxFQUNsQyxHQS9DSixzQkFpREcsU0FBVXlFLEdBQ0pBLEVBQWFDLFNBQVNDLE1BR3hCdEgsS0FBS3dILGdCQUFnQkosR0FGckJwSCxLQUFLaUksZ0JBQWdCYixFQUFjQSxFQUFhYyxrQkFJbkQsR0F2REosZ0NBeURHLFdBQXNCLFdBQ3BCbEksS0FBS2dGLFdBQVdyQixTQUFRLFNBQUN5RCxHQUN2QkEsRUFBYXJGLGlCQUFpQixTQUFTLFdBQ3JDLEVBQUtvRyxTQUFTZixHQUNkLEVBQUtHLG9CQUNOLEdBQ0YsR0FDRixHQWhFSiw4QkFrRUcsV0FDSXZILEtBQUs4QyxvQkFDUixNLG9FQXBFSixLQXNFWXNGLEVBQWUsQ0FDMUJDLGFBQWMsUUFDZHBCLGNBQWUsZUFDZkUscUJBQXNCLHVCQUN0Qk8sb0JBQXFCLCtCQUNyQkssZ0JBQWlCLHlCQUNqQkMsV0FBWSw0QiwwR0NqRWQsSUFDTU0sRUFEZTVHLFNBQVNDLGNBQWMsbUJBQ0pBLGNBQWMsa0JBQ2hENEcsRUFBb0I3RyxTQUFTQyxjQUFjLHlCQUMzQzZHLEVBQW1COUcsU0FBU0MsY0FBYyx3QkFFMUM4RyxFQURlL0csU0FBU0MsY0FBYyxtQkFDSkEsY0FBYyxrQkFDaER6QixFQUFTd0IsU0FBU0MsY0FBYywwQkFFaEMrRyxFQURpQmhILFNBQVNDLGNBQWMscUJBQ0ZBLGNBQWMsb0JBQ3BEZ0gsRUFBZWpILFNBQVNDLGNBQWMsbUNBV3RDaUgsRUFBb0IsSUFBSWhDLEVBQWMwQixFQUFvQkYsR0FDaEVRLEVBQWtCQyxtQkFDbEIsSUFBTUMsRUFBb0IsSUFBSWxDLEVBQWM2QixFQUFvQkwsR0FDaEVVLEVBQWtCRCxtQkFDbEIsSUFBTUUsRUFBc0IsSUFBSW5DLEVBQWM4QixFQUFzQk4sR0FDcEVXLEVBQW9CRixtQkFJcEIsSUFBTUcsRUFBTSxJQUFJckssRUFsQkQsQ0FDYkMsSUFBSywrQ0FDTEMsUUFBUyxDQUNQb0ssY0FBZSx1Q0FDZixlQUFnQixzQkFrQmxCdEosUUFBUXVKLElBQUksQ0FBQ0YsRUFBSUcsY0FBZUgsRUFBSUksb0JBQ25DN0osTUFBSyxZQUF5QixJLElBQUEsRyxFQUFBLEUsNENBQUEsSSxneEJBQXZCOEosRUFBdUIsS0FBZEMsRUFBYyxLQUN6QjVDLEVBQVkyQyxFQUFRdkssS0FDcEI2SCxFQUFXMEMsRUFBUXBKLE1BQ25CZ0IsRUFBTW9JLEVBQVFwSSxJQUNuQnNJLEVBQVNDLFlBQVksQ0FBQzlDLFVBQUFBLEVBQVdDLFNBQUFBLEVBQVUxRixJQUFBQSxJQUMzQ3NJLEVBQVNFLGtCQUFrQkosR0FDM0JLLEdBQVNDLFlBQVlMLEVBRXJCLElBQUVNLE9BQU0sU0FBQ0MsR0FBRCxPQUFTN0QsUUFBUUMsSUFBSTRELEVBQXJCLElBSVgsSUFBTUMsRUFBYyxJQUFJaEcsRUFBTSxxQkFHOUI1RCxFQUFPNkIsaUJBQWlCLFNBR3hCLFdBQ0VnSSxFQUFpQkMsT0FDakJqQixFQUFvQmtCLGlCQUNyQixJQUVELElBQU1GLEVBQW1CLElBQUloRSxFQUFvQixDQUMvQ2hDLGNBQWUsb0JBQ2ZjLGFBQWMsWUFBYyxJQUFaM0UsRUFBWSxFQUFaQSxPQUNkOEksRUFBSWtCLG9CQUFvQixDQUFFaEssT0FBUUEsSUFBVVgsTUFBSyxTQUFDQyxHQUNoRCtKLEVBQVNFLGtCQUFrQixDQUFDdkosT0FBUVYsRUFBSVUsUUFDekMsSUFBRTBKLE9BQU0sU0FBQ0MsR0FDUjdELFFBQVFDLElBQUk0RCxFQUNiLElBQUVNLFNBQVEsV0FDVEosRUFBaUJuRSxZQUFXLEVBQzdCLEdBQ0YsSUFHSG1FLEVBQWlCSyxvQkFHakI1QixFQUFpQnpHLGlCQUFpQixTQUFTLFdBQ3pDc0ksR0FBZUwsT0FDZnZCLEVBQW1CM0MsUUFDbkJnRCxFQUFrQm1CLGlCQUNuQixJQUVELElBQU1WLEVBQVcsSUFBSXJELEVBQVMsQ0FBQ0MsYUFBYyxrQkFBbUJDLFlBQWEscUJBQXNCQyxlQUFnQixxQkFHN0dpRSxFQUFvQixJQUFJMUYsRUFBYyxDQUMxQ2IsY0FBZSxrQkFDZmMsYUFBYyxZQUEyQixJQUF6QjZCLEVBQXlCLEVBQXpCQSxVQUFXQyxFQUFjLEVBQWRBLFNBQ3pCcUMsRUFBSXVCLGtCQUFrQixDQUFFekwsS0FBTTRILEVBQVd6RyxNQUFPMEcsSUFBWXBILE1BQUssU0FBQ0MsR0FDaEUrSixFQUFTQyxZQUFZLENBQUM5QyxVQUFXbEgsRUFBSVYsS0FBTTZILFNBQVVuSCxFQUFJUyxPQUMxRCxJQUFFMkosT0FBTSxTQUFDQyxHQUFELE9BQVM3RCxRQUFRQyxJQUFJNEQsRUFBckIsSUFDVFMsRUFBa0IxRSxZQUFXLEVBQzlCLEVBQ0RkLGtCQUFtQixTQUFDMEYsR0FDbEIsSUFBTUMsRUFBU2xCLEVBQVNKLGNBQ3hCcUIsRUFBTzdHLFNBQVEsU0FBQTZCLEdBQUssT0FBSUEsRUFBTUMsTUFBUWdGLEVBQVFqRixFQUFNMUcsS0FBaEMsR0FDckIsSUFFSHdMLEVBQWtCRixvQkFFbEI3QixFQUFrQnhHLGlCQUFpQixTQUFTLFdBQzFDdUksRUFBa0JOLE9BQ2xCcEIsRUFBa0JxQixpQkFDbkIsSUFFRCxJQUFNUyxHQUFhLElBQUlqRyxFQUFlLGtCQUV0QyxTQUFTbkUsR0FBaUJ2QixFQUFNRCxHQUM5QjRMLEdBQVdWLEtBQUssQ0FBQzVKLEtBQU0sQ0FBQ3JCLEtBQUFBLEVBQU1ELEtBQUFBLEtBQzlCNEwsR0FBV04sbUJBQ1osQ0FFRCxJQUFNNUosR0FBZ0IsU0FBQ21LLEdBQ3JCLE9BQU9wQixFQUFTdEksTUFBUTBKLENBQ3pCLEVBR0QsU0FBU0MsR0FBV3RJLEdBQ2xCQSxFQUFLQyxZQUFjZ0gsRUFDbkIsSUFBTXNCLEVBQU8sSUFBSTFLLEVBQUttQyxFQUFNLG9CQUM1QixDQUFFaEMsZ0JBQUFBLEdBQ0RDLGVBQWdCLFNBQUNILEdBQ2YwSixFQUFZRSxPQUNaRixFQUFZTSxvQkFDWnpCLEVBQWE1RyxpQkFBaUIsU0FBUyxXQUNyQ2lILEVBQUk4QixXQUFXMUssRUFBS2EsS0FBSzFCLE1BQUssV0FDM0JzTCxFQUFLekgsbUJBQ0wwRyxFQUFZekYsT0FDWixJQUFFdUYsT0FBTSxTQUFBQyxHQUFHLE9BQUk3RCxRQUFRQyxJQUFJNEQsRUFBaEIsR0FDZixHQUNGLEVBQ0ZySixjQUFBQSxHQUNBQyxnQkFBaUIsU0FBQ0wsR0FDYnlLLEVBQUszSSxVQUNOOEcsRUFBSStCLFdBQVczSyxFQUFLYSxLQUFLMUIsTUFBSyxTQUFDQyxHQUM3QnFMLEVBQUt6SSxhQUNMeUksRUFBSzNILFFBQVExRCxFQUFJd0IsTUFDbEIsSUFBRTRJLE9BQU0sU0FBQ0MsR0FBRCxPQUFTN0QsUUFBUUMsSUFBSTRELEVBQXJCLElBRVRiLEVBQUlnQyxTQUFTNUssRUFBS2EsS0FBSzFCLE1BQUssU0FBQ0MsR0FDM0JxTCxFQUFLMUksVUFDTDBJLEVBQUszSCxRQUFRMUQsRUFBSXdCLE1BQ2xCLElBQUU0SSxPQUFNLFNBQUNDLEdBQUQsT0FBUzdELFFBQVFDLElBQUk0RCxFQUFyQixHQUVaLElBR0QsT0FEZWdCLEVBQUtJLGNBRXJCLENBR0QsSUFBTXZCLEdBQVcsSUFBSXJHLEVBQVEsQ0FDM0JFLFNBQVUsU0FBQzJILEdBQ1R4QixHQUFTeUIsUUFBUVAsR0FBV00sR0FDN0IsR0FFSCxxQkFJTWIsR0FBaUIsSUFBSXpGLEVBQWMsQ0FDdkNiLGNBQWUsa0JBQ2ZjLGFBQWMsWUFBMEIsSUFBeEJ1RyxFQUF3QixFQUF4QkEsU0FBVUMsRUFBYyxFQUFkQSxTQUN4QnJDLEVBQUlzQyxRQUFRLENBQUN2TSxLQUFNcU0sRUFBVXRNLEtBQU11TSxJQUFXOUwsTUFBSyxTQUFDQyxHQUNsRGtLLEdBQVN5QixRQUFRUCxHQUFXcEwsR0FDN0IsSUFBRW9LLE9BQU0sU0FBQ0MsR0FDUjdELFFBQVFDLElBQUk0RCxFQUNiLElBQUVNLFNBQVEsV0FDVEUsR0FBZXpFLFlBQVcsRUFDM0IsSUFDRHlFLEdBQWVoRyxPQUNoQixJQUVIZ0csR0FBZUQsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtQXZhdGFyLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBBcGkge1xyXG4gICAgY29uc3RydWN0b3IoeyB1cmwsIGhlYWRlcnN9KSB7XHJcbiAgICAgIHRoaXMuX3VybCA9IHVybDtcclxuICAgICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QvNC10YLQvtC0INC30LDQs9GA0YPQt9C60Lgg0LjQvdGE0L7RgNC80LDRhtC40Lgg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1INGBINGB0LXRgNCy0LXRgNCwXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH11c2Vycy9tZWAsIHsgaGVhZGVyczogdGhpcy5faGVhZGVyc30pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAgLy/QvNC10YLQvtC0INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXHJcbiAgICB1cGRhdGVQcm9maWxlSW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH11c2Vycy9tZWAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgYWJvdXQgfSlcclxuICAgICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApKTtcclxuICAgIH1cclxuICAgICAvL9C80LXRgtC+0LQg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRjyDQsNCy0LDRgtCw0YDQsFxyXG4gICAgdXBkYXRlUHJvZmlsZUF2YXRhcih7IGF2YXRhciB9KSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9dXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBhdmF0YXIgfSlcclxuICAgICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApKTtcclxuICAgIH1cclxuICBcclxuICAgIC8v0LzQtdGC0L7QtCDQt9Cw0LPRgNGD0LfQutC4INC60LDRgNGC0L7Rh9C10Log0YEg0YHQtdGA0LLQtdGA0LBcclxuICAgIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkc2AsIHsgaGVhZGVyczogdGhpcy5faGVhZGVyc30pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QvNC10YLQvtC0INC00L7QsdCw0LLQu9C10L3QuNGPINC90L7QstC+0Lkg0LrQsNGA0YLQvtGH0LrQuFxyXG4gICAgYWRkQ2FyZCA9ICh7IG5hbWUsIGxpbmsgfSkgPT4ge1xyXG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfWNhcmRzYCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWUsIGxpbmsgfSlcclxuICAgICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfSAke3Jlcy5zdGF0dXNUZXh0fWApKTtcclxuICAgIH1cclxuICAgICAvL9C80LXRgtC+0LQg0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4IFxyXG4gICAgZGVsZXRlQ2FyZCA9IChpZCkgPT4ge1xyXG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfWNhcmRzLyR7aWR9YCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgIH0pLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwICR7cmVzLnN0YXR1c30gJHtyZXMuc3RhdHVzVGV4dH1gKSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAvL9C80LXRgtC+0LQgINC/0L7RgdGC0LDQvdC+0LLQutC4INC70LDQudC60LAg0LrQsNGA0YLQvtGH0LrQuFxyXG4gICAgbGlrZUNhcmQgPSAoaWQpID0+IHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkcy8ke2lkfS9saWtlc2AsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsCAke3Jlcy5zdGF0dXN9ICR7cmVzLnN0YXR1c1RleHR9YCkpO1xyXG4gICAgfVxyXG4gICAgLy/QvNC10YLQvtC0INGB0L3Rj9GC0LjRjyDQu9Cw0LnQutCwXHJcbiAgICBpbkxpa2VDYXJkID0gKGlkKSA9PiB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9Y2FyZHMvJHtpZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfSAke3Jlcy5zdGF0dXNUZXh0fWApKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiIsIi8v0YHQvtC30LTQsNGR0YIg0LrQsNGA0YLQvtGH0LrRgyDRgSDRgtC10LrRgdGC0L7QvCDQuCDRgdGB0YvQu9C60L7QuSDQvdCwINC40LfQvtCx0YDQsNC20LXQvdC40LVcclxuZXhwb3J0IGNsYXNzIENhcmQge1xyXG4gICAgLy/Qv9GA0LjQvdC40LzQsNC10YIg0LIg0LrQvtGB0YLRgNGD0LrRgtC+0YAg0LXRkSDQtNCw0L3QvdGL0LUg0Lgg0YHQtdC70LXQutGC0L7RgCDQtdGRINGC0LXQvNC/0LvQsNGCLdGN0LvQtdC80LXQvdGC0LBcclxuICAgIGNvbnN0cnVjdG9yKGRhdGEsIHRlbXBsYXRlU2VsZWN0b3IsIHsgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxDbGljaywgaGFuZGxlSXNPd25lciwgaGFuZGxlTGlrZXNDYXJkIH0pIHtcclxuICAgICAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XHJcbiAgICAgICAgdGhpcy5fb3duZXIgPSBkYXRhLm93bmVyLl9pZDtcclxuICAgICAgICB0aGlzLl9pc093bmVyID0gaGFuZGxlSXNPd25lcih0aGlzLl9vd25lcik7XHJcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbENsaWNrID0gaGFuZGxlRGVsQ2xpY2suYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlc0NhcmQgPSBoYW5kbGVMaWtlc0NhcmQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8v0YHQvtC00LXRgNC20LjRgiDQv9GA0LjQstCw0YLQvdGL0LUg0LzQtdGC0L7QtNGLLCBcclxuICAgIC8v0LrQvtGC0L7RgNGL0LUg0YDQsNCx0L7RgtCw0Y7RgiDRgSDRgNCw0LfQvNC10YLQutC+0LlcclxuICAgIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcilcclxuICAgICAgICAuY29udGVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpXHJcbiAgICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gICAgfVxyXG4gICAgLy/Rg9GB0YLQsNC90LDQstC70LjQstCw0Y7RgiDRgdC70YPRiNCw0YLQtdC70Lgg0YHQvtCx0YvRgtC40LlcclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19tYXNrLWdyb3VwJyk7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbGluaywgdGhpcy5fbmFtZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fY2FyZFRyYXNoID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdHJhc2gnKTtcclxuICAgICAgICBpZih0aGlzLl9pc093bmVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhcmRUcmFzaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZURlbENsaWNrKHRoaXMuX2RhdGEpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUxpa2VzQ2FyZCh0aGlzLl9kYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8vIC8v0LTQu9GPINC40LfQvNC10L3QtdC90LjRjyDRhtCy0LXRgtCwINC70LDQudC60LBcclxuICAgIF9oYW5kbGVsaWtlQ2hlY2soKSB7XHJcbiAgICAgICAgaWYodGhpcy5pc0xpa2VkKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5hZGRMaWtlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5kZWxldGVMaWtlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaXNMaWtlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlrZXMuc29tZSgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZGF0YS5jdXJyZW50VXNlci5faWQgPT09IGl0ZW0uX2lkO1xyXG4gICAgICAgIH0pO1xyXG4gICAgXHJcbiAgICB9XHJcbiAgICBhZGRMaWtlKCkge1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fbGlrZV9hY3RpdmUnKTtcclxuICAgIH1cclxuICAgIGRlbGV0ZUxpa2UoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdlbGVtZW50X19saWtlX2FjdGl2ZScpO1xyXG4gICAgfVxyXG4gICAgLy/QtNC70Y8g0L7RgtC+0LHRgNCw0LbQtdC90LjRjyDQu9Cw0LnQutCwXHJcbiAgICBzZXRMaWtlKGl0ZW0pIHtcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGl0ZW07XHJcbiAgICAgICAgdGhpcy5fY2FyZExpa2VDb3VudC50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgIH1cclxuICAgIC8v0LTQu9GPINGD0LTQsNC70LXQvdC40Y8g0LrQsNGA0YLQuNC90LrQuFxyXG4gICAgaGFuZGxlRGVsZXRlQ2FyZCA9ICgpID0+IHsgXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIH0gIFxyXG4gICAgLy/Qv9GD0LHQu9C40YfQvdGL0Lkg0LzQtdGC0L7QtCwg0LrQvtGC0L7RgNGL0Lkg0LLQvtC30LLRgNCw0YnQsNC10YIg0L/QvtC70L3QvtGB0YLRjNGOINGA0LDQsdC+0YLQvtGB0L/QvtGB0L7QsdC90YvQuSDQuCDQvdCw0L/QvtC70L3QtdC90L3Ri9C5INC00LDQvdC90YvQvNC4INGN0LvQtdC80LXQvdGCINC60LDRgNGC0L7Rh9C60LhcclxuICAgIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgICAgIHRoaXMuX2NhcmRUaXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJyk7XHJcbiAgICAgICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgICAgICB0aGlzLl9jYXJkTGlrZUNvdW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudCcpO1xyXG4gICAgICAgIHRoaXMuc2V0TGlrZSh0aGlzLl9saWtlcyk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlbGlrZUNoZWNrKCk7XHJcbiAgICAgICAgLy90aGlzLmFkZExpa2UoKTtcclxuICAgICAgICAvL3RoaXMuZGVsZXRlTGlrZSgpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgIGlmKCF0aGlzLl9pc093bmVyKSB7XHJcbiAgICAgICAgICAgdGhpcy5fY2FyZFRyYXNoLnJlbW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL3RoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG4iLCIvL9C+0YLRgNC40YHQvtCy0YvQstCw0LXRgiDRjdC70LXQvNC10L3RgtGLINC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG5leHBvcnQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICAvL3JlbmRlcmVyLdC+0YLQstC10YfQsNC10YIg0LfQsCDRgdC+0LfQtNCw0L3QuNC1INC4INC+0YLRgNC40YHQvtCy0LrRgyDQtNCw0L3QvdGL0YUg0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIC8v0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINC+0YLRgNC40YHQvtCy0LrRgyDQstGB0LXRhSDRjdC70LXQvNC10L3RgtC+0LJcclxuICAgIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XHJcbiAgICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvL9C00L7QsdCw0LLQu9GP0LXRgiDRjdC70LXQvNC10L3RgiDQsiAg0LrQvtC90YLQtdC50L3QtdGAXHJcbiAgICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxuICAgXHJcbn0iLCIvL9C+0YLQutGA0YvQstCw0LXRgiwg0LfQsNC60YDRi9Cy0LDQtdGCINC/0L7Qv9Cw0L9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcclxuICAgIH1cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgICAgIGlmKGV2dC5rZXkgPT09XCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9vcGVuZWQnKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy/QtNC+0LHQsNCy0LvRj9C10YIg0YHQu9GD0YjQsNGC0LXQu9GMINC40LrQvtC/0LrQtSDQt9Cw0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsFxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fY2xvc2VJY29uID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWljb24nKTtcclxuICAgICAgICB0aGlzLl9jbG9zZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKGV2dC50YXJnZXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICBcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1nID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2VsLWltZycpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwQ2FwdGlvbiA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcignLnBvcHVwX19lbC1jYXB0aW9uJyk7XHJcbiAgICB9XHJcbiAgICAvL9Cy0YHRgtCw0LLQu9GP0LXRgiDQsiDQv9C+0L/QsNC/INC60LDRgNGC0LjQvdC60YNcclxuICAgIG9wZW4oeyBkYXRhIH0pIHtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWcuc3JjID0gZGF0YS5saW5rO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1nLmFsdCA9IGRhdGEubmFtZTtcclxuICAgICAgICB0aGlzLl9wb3B1cENhcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7ICAgXHJcbiAgICB9XHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpOyBcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQsIGhhbmRsZUZvcm1QcmVGaWxsIH0pIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybV9faW5wdXQnKTtcclxuICAgICAgICBBcnJheS5mcm9tKHRoaXMuX2lucHV0TGlzdCk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVByZUZpbGwgPSBoYW5kbGVGb3JtUHJlRmlsbDtcclxuICAgICAgICB0aGlzLl9idXR0b25TdWJtaXQgPSB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19zdWJtaXQtYnV0dG9uJyk7XHJcbiAgICB9XHJcbiAgICBzZXRMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uU3VibWl0LnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJzsgICBcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG4gICAgLy/RgdC+0LHQuNGA0LDQtdGCINC00LDQvdC90YvQtSDQstGB0LXRhSDQv9C+0LvQtdC5XHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgY29uc3QgZm9ybVZhbHVlcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgICAgICAgZm9ybVZhbHVlc1sgaW5wdXQubmFtZSBdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGZvcm1WYWx1ZXM7IFxyXG4gICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAvL9C4INC00L7QsdCw0LLQu9GP0LXRgiDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIGlmKHRoaXMuX2hhbmRsZUZvcm1QcmVGaWxsKSB7XHJcbiAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVByZUZpbGwodGhpcy5faW5wdXRMaXN0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybUF2YXRhciBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0LCB9KSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0Jyk7XHJcbiAgICAgICAgIEFycmF5LmZyb20odGhpcy5faW5wdXRMaXN0KTtcclxuICAgIH1cclxuICAgIC8v0YHQvtCx0LjRgNCw0LXRgiDQtNCw0L3QvdGL0LUg0LLRgdC10YUg0L/QvtC70LXQuVxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgICAgICAgZm9ybVZhbHVlc1sgaW5wdXQubmFtZSBdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgICAgY29uc29sZS5sb2coZm9ybVZhbHVlcyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGZvcm1WYWx1ZXM7XHJcbiAgICB9XHJcbiAgICBzZXRMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uU3VibWl0LnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJzsgICBcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAvL9C4INC00L7QsdCw0LLQu9GP0LXRgiDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG59IiwiIC8v0YPQv9GA0LDQstC70Y/QtdGCINC+0YLQvtCx0YDQsNC20LXQvdC40LXQvCDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LUg0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbiBleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yfSkge1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3VzZXJKb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuXHJcbiAgICB9XHJcbiAgICAvL9Cy0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgiDRgSDQtNCw0L3QvdGL0LzQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHRoaXMudXNlckRhdGEgPSB7XHJcbiAgICAgICAgICAgIG5hbWVJbnB1dDogdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGpvYklucHV0OiB0aGlzLl91c2VySm9iLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBfaWQ6IHRoaXMuX2lkXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdGhpcy51c2VyRGF0YTsgXHJcbiAgICB9XHJcbiAgICAvL9C/0YDQuNC90LjQvNCw0LXRgiDQvdC+0LLRi9C1INC00LDQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0Lgg0LTQvtCx0LDQstC70Y/QtdGCINC40YUg0L3QsCDRgdGC0YDQsNC90LjRhtGDXHJcbiAgICBzZXRVc2VySW5mbyh7bmFtZUlucHV0LCBqb2JJbnB1dCwgX2lkfSkge1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50ID0gbmFtZUlucHV0O1xyXG4gICAgICAgIHRoaXMuX3VzZXJKb2IudGV4dENvbnRlbnQgPSBqb2JJbnB1dDtcclxuICAgICAgICB0aGlzLl9pZCA9IF9pZDsgXHJcbiAgICB9XHJcbiAgICBzZXRVc2VySW5mb0F2YXRhcih7IGF2YXRhcn0pIHtcclxuICAgICAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyOyBcclxuICAgIH1cclxufSIsIiBleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgc2V0dGluZ3MpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX3NldHRpbmdzLmlucHV0U2VsZWN0b3IpKTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgICAvL9C/0YDQuNCy0LDRgtC90YvQtSDQvNC10YLQvtC00YtcclxuICAgIC8v0L/RgNC+0LLQtdGA0Y/QtdGCINCy0YHQtSDQuNC90L/Rg9GC0YtcclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLy/Qv9GA0L7QstC10YDRj9C10YIg0L/QvtC70Y8g0YTQvtGA0LzRiyDQv9GA0Lgg0L7RgtC60YDRi9GC0LjQtSDQv9C+0L/QsNC/0LBcclxuICAgIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgXHJcbiAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICB9XHJcbiAgICAvL9C/0LXRgNC10LrQu9GO0YfQsNC10YIg0LrQvdC+0L/QutGDXHJcbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICAgICAgaWYodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8v0L/QvtC60LDQt9GL0LLQsNC10YIg0Y3Qu9C10LzQtdC90YIg0L7RiNC40LHQutC4XHJcbiAgICBfc2hvd0lucHV0RXJyb3IgKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICAgIHRoaXMuX2Vycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTsgIFxyXG4gICAgfVxyXG4gICAgICAvL9GB0LrRgNGL0LLQsNC10YIg0Y3Qu9C10LzQtdC90YIg0L7RiNC40LHQutC4XHJcbiAgICBfaGlkZUlucHV0RXJyb3IgKGlucHV0RWxlbWVudCkge1xyXG4gICAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgIHRoaXMuX2Vycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIH1cclxuICAgICAgICAvL9C/0YDQvtCy0LXRgNGP0LXRgiDQstCw0LvQuNC00LDRhtC40Y5cclxuICAgIF9pc1ZhbGlkIChpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgaWYoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgICB9IFxyXG4gICAgfVxyXG4gICAgLy/QvtCx0YDQsNCx0L7RgtGH0LjQuiDQstGB0LXRhSDQv9C+0LvQtdC5XHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5faXNWYWxpZChpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvL9C/0YPQsdC70LjRh9C90YvQuSDQvNC10YLQvtC0INC60L7RgtC+0YDRi9C5INCy0LrQu9GO0YfQsNC10YIg0LLQsNC70LjQtNCw0YbQuNGOINGE0L7RgNC80YtcclxuICAgIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH0gIFxyXG59XHJcbmV4cG9ydCBjb25zdCBmb3JtU2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiAnLmZvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcuZm9ybV9faW5wdXQnLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLmZvcm1fX3N1Ym1pdC1idXR0b24nLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdmb3JtX19zdWJtaXQtYnV0dG9uX2Rpc2FibGVkJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdmb3JtX19pbnB1dF90eXBlX2Vycm9yJyxcclxuICBlcnJvckNsYXNzOiAnZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlJ1xyXG59XHJcblxyXG5cclxuIiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcbmltcG9ydCB7IEFwaSB9IGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5qcyc7XHJcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cC5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm1BdmF0YXIgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtQXZhdGFyLmpzJztcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yLCBmb3JtU2V0dGluZ3MgfSBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xyXG5cclxuY29uc3QgcG9wdXBGb3JFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2Zvcl9lZGl0Jyk7XHJcbmNvbnN0IGZvcm1FbGVtZW50Rm9yRWRpdCA9IHBvcHVwRm9yRWRpdC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9mb3JfZWRpdCcpO1xyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xyXG5jb25zdCBwcm9maWxlQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuY29uc3QgcG9wdXBGb3JDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2Zvcl9jYXJkJyk7XHJcbmNvbnN0IGZvcm1FbGVtZW50Rm9yQ2FyZCA9IHBvcHVwRm9yQ2FyZC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9mb3JfY2FyZCcpO1xyXG5jb25zdCBhdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faG92ZXItYXZhdGFyJyk7XHJcbmNvbnN0IHBvcHVwRm9yQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2Zvcl9hdmF0YXInKTtcclxuY29uc3QgZm9ybUVsZW1lbnRGb3JBdmF0YXIgPSBwb3B1cEZvckF2YXRhci5xdWVyeVNlbGVjdG9yKCcuZm9ybV9mb3JfYXZhdGFyJyk7XHJcbmNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19zdWJtaXQtYnV0dG9uX2Zvcl9kZWxldGUnKTtcclxuXHJcbmNvbnN0IGNvbmZpZyA9IHtcclxuICB1cmw6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQ2LycsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogJzMwODc2YWU2LTljNzEtNGY5ZC1hNzI2LTNlMTRiYzIzNWVhNicsXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgfVxyXG59XHJcblxyXG4vL9C00LvRjyDQv9C+0L/QsNC/0L7QsiDRgdC+0LfQtNCw0Y7RgtGB0Y8g0Y3QutC30LXQvNC/0LvRj9GA0Ysg0LrQu9Cw0YHRgdC+0LIg0LLQsNC70LjQtNCw0YbQuNC4XHJcbmNvbnN0IHBvcHVwRm9yRWRpdFZhbGlkID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUVsZW1lbnRGb3JFZGl0LCBmb3JtU2V0dGluZ3MpO1xyXG5wb3B1cEZvckVkaXRWYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNvbnN0IHBvcHVwRm9yQ2FyZFZhbGlkID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUVsZW1lbnRGb3JDYXJkLCBmb3JtU2V0dGluZ3MpO1xyXG5wb3B1cEZvckNhcmRWYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNvbnN0IHBvcHVwRm9yQXZhdGFyVmFsaWQgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtRWxlbWVudEZvckF2YXRhciwgZm9ybVNldHRpbmdzKTtcclxucG9wdXBGb3JBdmF0YXJWYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5cclxuLy/RjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwINGA0LDQsdC+0YLRiyDRgSDRgdC10YDQstC10YDQvtC8OiBBcGlcclxuY29uc3QgYXBpID0gbmV3IEFwaShjb25maWcpO1xyXG5cclxuIC8v0YTRg9C90LrRhtC40Y8g0L7QsdGK0LXQtNC40L3Rj9GO0YnQsNGPINC/0YDQvtC80LjRgdC+0LvRiyDQutCw0YDRgtC+0YfQtdC6INC4INC40L3RhNC+0YDQvNCw0YbQuNC4INC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtSDRgSDRgdC10YDQstC10YDQsFxyXG4gY29uc3QgYWxsUHJvbWlzZSA9ICgpID0+IHtcclxuICBQcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRJbml0aWFsQ2FyZHMoKV0pXHJcbiAgLnRoZW4oKFtyZXNVc2VyLCByZXNDYXJkc10pID0+IHtcclxuICAgIGxldCBuYW1lSW5wdXQgPSByZXNVc2VyLm5hbWU7XHJcbiAgICBsZXQgam9iSW5wdXQgPSByZXNVc2VyLmFib3V0O1xyXG4gICAgbGV0IF9pZCA9IHJlc1VzZXIuX2lkO1xyXG4gICB1c2VySW5mby5zZXRVc2VySW5mbyh7bmFtZUlucHV0LCBqb2JJbnB1dCwgX2lkfSk7XHJcbiAgIHVzZXJJbmZvLnNldFVzZXJJbmZvQXZhdGFyKHJlc1VzZXIpO1xyXG4gICBjYXJkTGlzdC5yZW5kZXJJdGVtcyhyZXNDYXJkcyk7XHJcbiAgIFxyXG4gIH0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG59ICBcclxuYWxsUHJvbWlzZSgpO1xyXG4vL9GN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAg0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINGD0LTQsNC70LXQvdC40Y9cclxuY29uc3QgcG9wdXBGb3JEZWwgPSBuZXcgUG9wdXAoJy5wb3B1cF9mb3JfZGVsZXRlJyk7XHJcblxyXG4vL9C+0LHRgNCw0LHQvtGC0YfQuNC6INGB0LvRg9GI0LDRgtC10LvRjyBhdmF0YXJcclxuYXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQXZhdGFyQ2xpY2spO1xyXG5cclxuLy/RhNGD0L3QutGG0LjRjyDQtNC70Y8g0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAgYXZhdGFyXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhckNsaWNrKCkge1xyXG4gIGZvcm1TdWJtaXRBdmF0YXIub3BlbigpO1xyXG4gIHBvcHVwRm9yQXZhdGFyVmFsaWQucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn1cclxuLy/QtNC70Y8g0YTQvtGA0LzRiyDQsNCy0LDRgtCw0YDQsCDRjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwXHJcbmNvbnN0IGZvcm1TdWJtaXRBdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybUF2YXRhcih7XHJcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF9mb3JfYXZhdGFyJyxcclxuICBoYW5kbGVTdWJtaXQ6ICh7YXZhdGFyfSkgPT4ge1xyXG4gICAgYXBpLnVwZGF0ZVByb2ZpbGVBdmF0YXIoeyBhdmF0YXI6IGF2YXRhciB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm9BdmF0YXIoe2F2YXRhcjogcmVzLmF2YXRhcn0pO1xyXG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSkuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGZvcm1TdWJtaXRBdmF0YXIuc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxuZm9ybVN1Ym1pdEF2YXRhci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/QvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC70YPRiNCw0YLQtdC70Y8g0LrQsNGA0YLQvtGH0LrQuFxyXG5wcm9maWxlQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGZvcm1TdWJtaXRDYXJkLm9wZW4oKTtcclxuICBmb3JtRWxlbWVudEZvckNhcmQucmVzZXQoKTtcclxuICBwb3B1cEZvckNhcmRWYWxpZC5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcbi8v0Y3QutC30LXQvNC/0LvRj9GAINC60LvQsNGB0YHQsCDQtNC70Y8g0L/RgNC+0YTQuNC70Y9cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe25hbWVTZWxlY3RvcjogJy5wcm9maWxlX190aXRsZScsIGpvYlNlbGVjdG9yOiAnLnByb2ZpbGVfX3N1YnRpdGxlJywgYXZhdGFyU2VsZWN0b3I6ICcucHJvZmlsZV9fYXZhdGFyJ30pO1xyXG4gICAgXHJcbi8v0LTQu9GPINGE0L7RgNC80Ysg0L/RgNC+0YTQuNC70Y8g0Y3QutC30LXQvNC/0LvRj9GAINC60LvQsNGB0YHQsFxyXG5jb25zdCBmb3JtU3VibWl0UHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiAnLnBvcHVwX2Zvcl9lZGl0JyxcclxuICBoYW5kbGVTdWJtaXQ6ICh7bmFtZUlucHV0LCBqb2JJbnB1dH0pID0+IHtcclxuICAgIGFwaS51cGRhdGVQcm9maWxlSW5mbyh7IG5hbWU6IG5hbWVJbnB1dCwgYWJvdXQ6IGpvYklucHV0IH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7bmFtZUlucHV0OiByZXMubmFtZSwgam9iSW5wdXQ6IHJlcy5hYm91dH0pO1xyXG4gICAgfSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgICBmb3JtU3VibWl0UHJvZmlsZS5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICB9LFxyXG4gIGhhbmRsZUZvcm1QcmVGaWxsOiAoaW5wdXRzKSA9PiB7XHJcbiAgICBjb25zdCB2YWx1ZXMgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4gaW5wdXQudmFsdWUgPSB2YWx1ZXNbIGlucHV0Lm5hbWUgXSlcclxuICB9XHJcbn0pO1xyXG5mb3JtU3VibWl0UHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG4vL9C+0LHRgNCw0LHQvtGC0YfQuNC6INGB0LvRg9GI0LDRgtC10LvRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgZm9ybVN1Ym1pdFByb2ZpbGUub3BlbigpO1xyXG4gIHBvcHVwRm9yRWRpdFZhbGlkLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KTtcclxuLy/RjdC60LfQtdC80L/Qu9GP0YAg0LTQu9GPINC/0YDQvtGB0LzQvtGC0YDQsCDQutCw0YDRgtC40L3QutC4XHJcbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF9mb3JfaW1nJyk7XHJcbi8v0YTRg9C90LrRhtC40Y8g0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0L/RgNC+0YHQvNC+0YLRgNCwINC/0L7Qv9Cw0L/QsCDQutCw0YDRgtC40L3QutC4XHJcbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayAobGluaywgbmFtZSkge1xyXG4gIHBvcHVwSW1hZ2Uub3Blbih7ZGF0YToge2xpbmssIG5hbWV9IH0pO1xyXG4gIHBvcHVwSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxufVxyXG4vL9GE0YPQvdC60YbQuNGPINC/0YDQvtCy0LXRgNC60Lgg0LLQu9Cw0LTQtdC70YzRhtCwINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xyXG5jb25zdCBoYW5kbGVJc093bmVyID0gKGVsKSA9PiB7XHJcbiAgcmV0dXJuIHVzZXJJbmZvLl9pZCA9PT0gZWw7XHJcbn1cclxuXHJcbi8v0YTRg9C90LrRhtC40Y8g0LLQvtC30LLRgNCw0YnQsNC10YIg0LPQvtGC0L7QstGD0Y4g0LrQsNGA0YLQvtGH0LrRg1xyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGl0ZW0pIHtcclxuICBpdGVtLmN1cnJlbnRVc2VyID0gdXNlckluZm87XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sICcuZWxlbWVudC10ZW1wbGF0ZScsIFxyXG4gIHsgaGFuZGxlQ2FyZENsaWNrLCBcclxuICAgaGFuZGxlRGVsQ2xpY2s6IChkYXRhKSA9PiB7XHJcbiAgICAgcG9wdXBGb3JEZWwub3BlbigpO1xyXG4gICAgIHBvcHVwRm9yRGVsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XHJcbiAgICAgICBhcGkuZGVsZXRlQ2FyZChkYXRhLl9pZCkudGhlbigoKSA9PntcclxuICAgICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgICAgcG9wdXBGb3JEZWwuY2xvc2UoKTtcclxuICAgICAgICAgfSkuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG4gICAgIH0pO1xyXG4gICB9LCBcclxuICBoYW5kbGVJc093bmVyLCAgXHJcbiAgaGFuZGxlTGlrZXNDYXJkOiAoZGF0YSkgPT4ge1xyXG4gICAgaWYoY2FyZC5pc0xpa2VkKCkpIHtcclxuICAgICAgYXBpLmluTGlrZUNhcmQoZGF0YS5faWQpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmQuZGVsZXRlTGlrZSgpO1xyXG4gICAgICAgIGNhcmQuc2V0TGlrZShyZXMubGlrZXMpO1xyXG4gICAgICB9KS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxuICAgIH0gZWxzZSB7IFxyXG4gICAgICBhcGkubGlrZUNhcmQoZGF0YS5faWQpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmQuYWRkTGlrZSgpO1xyXG4gICAgICAgIGNhcmQuc2V0TGlrZShyZXMubGlrZXMpO1xyXG4gICAgICB9KS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxuICAgIH1cclxuICB9IFxyXG59KTtcclxuICBjb25zdCBjYXJkRWwgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gIHJldHVybiBjYXJkRWw7XHJcbn1cclxuXHJcbi8v0LTQu9GPINC60LDQttC00L7QuSDQutCw0YDRgtC+0YfQutC4INGB0L7Qt9C00LDRkdGC0YHRjyDRjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwXHJcbmNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xyXG4gIHJlbmRlcmVyOiAoY2FyZEl0ZW0pID0+IHtcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oY3JlYXRlQ2FyZChjYXJkSXRlbSkpO1xyXG4gIH1cclxufSxcclxuJy5ncm91cHNfX2VsZW1lbnRzJ1xyXG4pO1xyXG4gICAgXHJcbi8v0YHQvtC30LTQsNGR0Lwg0Y3QutC30LXQvNC/0LvRj9GAINGE0L7RgNC80Ysg0LTQu9GPINC60LDRgNGC0L7Rh9C60LhcclxuY29uc3QgZm9ybVN1Ym1pdENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF9mb3JfY2FyZCcsXHJcbiAgaGFuZGxlU3VibWl0OiAoe2xpbmtDYXJkLCBuYW1lQ2FyZH0pID0+IHtcclxuICAgIGFwaS5hZGRDYXJkKHtsaW5rOiBsaW5rQ2FyZCwgbmFtZTogbmFtZUNhcmR9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKHJlcykpO1xyXG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSkuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGZvcm1TdWJtaXRDYXJkLnNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbiAgICBmb3JtU3VibWl0Q2FyZC5jbG9zZSgpO1xyXG4gIH1cclxufSk7XHJcbmZvcm1TdWJtaXRDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7ICBcclxuXHJcbiJdLCJuYW1lcyI6WyJBcGkiLCJ1cmwiLCJoZWFkZXJzIiwibmFtZSIsImxpbmsiLCJmZXRjaCIsIl91cmwiLCJtZXRob2QiLCJfaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiaWQiLCJ0aGlzIiwiYWJvdXQiLCJhdmF0YXIiLCJDYXJkIiwiZGF0YSIsInRlbXBsYXRlU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxDbGljayIsImhhbmRsZUlzT3duZXIiLCJoYW5kbGVMaWtlc0NhcmQiLCJfZWxlbWVudCIsInJlbW92ZSIsIl9saW5rIiwiX25hbWUiLCJfZGF0YSIsIl9saWtlcyIsImxpa2VzIiwiX2lkIiwiX293bmVyIiwib3duZXIiLCJfaXNPd25lciIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxDbGljayIsImJpbmQiLCJfaGFuZGxlTGlrZXNDYXJkIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9jYXJkSW1hZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwiX2NhcmRUcmFzaCIsIl9saWtlQnV0dG9uIiwiaXNMaWtlZCIsImFkZExpa2UiLCJkZWxldGVMaWtlIiwic29tZSIsIml0ZW0iLCJjdXJyZW50VXNlciIsImNsYXNzTGlzdCIsImFkZCIsIl9jYXJkTGlrZUNvdW50IiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJzcmMiLCJhbHQiLCJfY2FyZFRpdGxlIiwic2V0TGlrZSIsIl9oYW5kbGVsaWtlQ2hlY2siLCJoYW5kbGVEZWxldGVDYXJkIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJmb3JFYWNoIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBTZWxlY3RvciIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJjbG9zZSIsIl9jbG9zZUljb24iLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfcG9wdXBJbWciLCJfcG9wdXBDYXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdCIsImhhbmRsZUZvcm1QcmVGaWxsIiwiX2hhbmRsZVN1Ym1pdCIsIl9pbnB1dExpc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwiQXJyYXkiLCJmcm9tIiwiX2hhbmRsZUZvcm1QcmVGaWxsIiwiX2J1dHRvblN1Ym1pdCIsImlzTG9hZGluZyIsImZvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiX2Zvcm0iLCJwcmV2ZW50RGVmYXVsdCIsInNldExvYWRpbmciLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEZvcm1BdmF0YXIiLCJjb25zb2xlIiwibG9nIiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3VzZXJOYW1lIiwiX3VzZXJKb2IiLCJfYXZhdGFyIiwidXNlckRhdGEiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsInNldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX3NldHRpbmdzIiwiaW5wdXRTZWxlY3RvciIsIl9idXR0b25FbGVtZW50Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2hhc0ludmFsaWRJbnB1dCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJlcnJvck1lc3NhZ2UiLCJfZXJyb3JFbGVtZW50IiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2lzVmFsaWQiLCJmb3JtU2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJmb3JtRWxlbWVudEZvckVkaXQiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVBZGRCdXR0b24iLCJmb3JtRWxlbWVudEZvckNhcmQiLCJmb3JtRWxlbWVudEZvckF2YXRhciIsImRlbGV0ZUJ1dHRvbiIsInBvcHVwRm9yRWRpdFZhbGlkIiwiZW5hYmxlVmFsaWRhdGlvbiIsInBvcHVwRm9yQ2FyZFZhbGlkIiwicG9wdXBGb3JBdmF0YXJWYWxpZCIsImFwaSIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsInJlc1VzZXIiLCJyZXNDYXJkcyIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJzZXRVc2VySW5mb0F2YXRhciIsImNhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJjYXRjaCIsImVyciIsInBvcHVwRm9yRGVsIiwiZm9ybVN1Ym1pdEF2YXRhciIsIm9wZW4iLCJyZXNldFZhbGlkYXRpb24iLCJ1cGRhdGVQcm9maWxlQXZhdGFyIiwiZmluYWxseSIsInNldEV2ZW50TGlzdGVuZXJzIiwiZm9ybVN1Ym1pdENhcmQiLCJmb3JtU3VibWl0UHJvZmlsZSIsInVwZGF0ZVByb2ZpbGVJbmZvIiwiaW5wdXRzIiwidmFsdWVzIiwicG9wdXBJbWFnZSIsImVsIiwiY3JlYXRlQ2FyZCIsImNhcmQiLCJkZWxldGVDYXJkIiwiaW5MaWtlQ2FyZCIsImxpa2VDYXJkIiwiZ2VuZXJhdGVDYXJkIiwiY2FyZEl0ZW0iLCJhZGRJdGVtIiwibGlua0NhcmQiLCJuYW1lQ2FyZCIsImFkZENhcmQiXSwic291cmNlUm9vdCI6IiJ9